// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gate.proto

/*
Package gate is a generated protocol buffer package.

It is generated from these files:
	gate.proto

It has these top-level messages:
	ChatUserInfo
	ChatMsgInfo
	ChatSendedMsgInfo
	HandShakeReq
	HandShakeRes
	LoginReq
	LoginRes
	LogOutReq
	LogOutRes
	HeartReq
	HeartRes
	SendPriMsgReq
	SendPriMsgRes
	NewMsgNotify
	KickoutNotify
	NewMsgPullReq
	NewMsgPullRes
*/
package gate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProtoType int32

const (
	ProtoType_HandShakeReqType      ProtoType = 0
	ProtoType_HandShakeResType      ProtoType = 1
	ProtoType_HeartReqType          ProtoType = 2
	ProtoType_HeartResType          ProtoType = 3
	ProtoType_LoginReqType          ProtoType = 10
	ProtoType_LoginResType          ProtoType = 11
	ProtoType_LogOutReqType         ProtoType = 12
	ProtoType_LogOutResType         ProtoType = 14
	ProtoType_SendPriMsgReqType     ProtoType = 20
	ProtoType_SendPriMsgResType     ProtoType = 21
	ProtoType_NewMsgPullReqType     ProtoType = 22
	ProtoType_NewMsgPullResType     ProtoType = 23
	ProtoType_NewMsgNotifyType      ProtoType = 30
	ProtoType_KickoutNotifyType     ProtoType = 31
	ProtoType_ChatUserInfoType      ProtoType = 100
	ProtoType_ChatMsgInfoType       ProtoType = 101
	ProtoType_ChatSendedMsgInfoType ProtoType = 102
)

var ProtoType_name = map[int32]string{
	0:   "HandShakeReqType",
	1:   "HandShakeResType",
	2:   "HeartReqType",
	3:   "HeartResType",
	10:  "LoginReqType",
	11:  "LoginResType",
	12:  "LogOutReqType",
	14:  "LogOutResType",
	20:  "SendPriMsgReqType",
	21:  "SendPriMsgResType",
	22:  "NewMsgPullReqType",
	23:  "NewMsgPullResType",
	30:  "NewMsgNotifyType",
	31:  "KickoutNotifyType",
	100: "ChatUserInfoType",
	101: "ChatMsgInfoType",
	102: "ChatSendedMsgInfoType",
}
var ProtoType_value = map[string]int32{
	"HandShakeReqType":      0,
	"HandShakeResType":      1,
	"HeartReqType":          2,
	"HeartResType":          3,
	"LoginReqType":          10,
	"LoginResType":          11,
	"LogOutReqType":         12,
	"LogOutResType":         14,
	"SendPriMsgReqType":     20,
	"SendPriMsgResType":     21,
	"NewMsgPullReqType":     22,
	"NewMsgPullResType":     23,
	"NewMsgNotifyType":      30,
	"KickoutNotifyType":     31,
	"ChatUserInfoType":      100,
	"ChatMsgInfoType":       101,
	"ChatSendedMsgInfoType": 102,
}

func (x ProtoType) String() string {
	return proto.EnumName(ProtoType_name, int32(x))
}
func (ProtoType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MsgType int32

const (
	MsgType_SYSTEM   MsgType = 0
	MsgType_PRIVATE  MsgType = 1
	MsgType_GROUP    MsgType = 2
	MsgType_CHATROOM MsgType = 3
)

var MsgType_name = map[int32]string{
	0: "SYSTEM",
	1: "PRIVATE",
	2: "GROUP",
	3: "CHATROOM",
}
var MsgType_value = map[string]int32{
	"SYSTEM":   0,
	"PRIVATE":  1,
	"GROUP":    2,
	"CHATROOM": 3,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}
func (MsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ContentType int32

const (
	ContentType_TEXT     ContentType = 0
	ContentType_IMAGE    ContentType = 1
	ContentType_AUDIO    ContentType = 2
	ContentType_VIDEO    ContentType = 3
	ContentType_POSITION ContentType = 4
)

var ContentType_name = map[int32]string{
	0: "TEXT",
	1: "IMAGE",
	2: "AUDIO",
	3: "VIDEO",
	4: "POSITION",
}
var ContentType_value = map[string]int32{
	"TEXT":     0,
	"IMAGE":    1,
	"AUDIO":    2,
	"VIDEO":    3,
	"POSITION": 4,
}

func (x ContentType) String() string {
	return proto.EnumName(ContentType_name, int32(x))
}
func (ContentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ResultType int32

const (
	ResultType_FAIL             ResultType = 0
	ResultType_SUCCESS          ResultType = 1
	ResultType_PARAMSINVALID    ResultType = 2
	ResultType_SERVERNOTRUNNING ResultType = 3
	ResultType_NOTINRIGHTSTATUS ResultType = 4
	ResultType_NOTSUPPORTAPPID  ResultType = 5
)

var ResultType_name = map[int32]string{
	0: "FAIL",
	1: "SUCCESS",
	2: "PARAMSINVALID",
	3: "SERVERNOTRUNNING",
	4: "NOTINRIGHTSTATUS",
	5: "NOTSUPPORTAPPID",
}
var ResultType_value = map[string]int32{
	"FAIL":             0,
	"SUCCESS":          1,
	"PARAMSINVALID":    2,
	"SERVERNOTRUNNING": 3,
	"NOTINRIGHTSTATUS": 4,
	"NOTSUPPORTAPPID":  5,
}

func (x ResultType) String() string {
	return proto.EnumName(ResultType_name, int32(x))
}
func (ResultType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type KickType int32

const (
	KickType_OTHERLOGIN KickType = 0
	KickType_FORBIDDEN  KickType = 2
)

var KickType_name = map[int32]string{
	0: "OTHERLOGIN",
	2: "FORBIDDEN",
}
var KickType_value = map[string]int32{
	"OTHERLOGIN": 0,
	"FORBIDDEN":  2,
}

func (x KickType) String() string {
	return proto.EnumName(KickType_name, int32(x))
}
func (KickType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ChatUserInfo struct {
	Uid      string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Gender   int32  `protobuf:"varint,3,opt,name=gender" json:"gender,omitempty"`
	Avatar   string `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *ChatUserInfo) Reset()                    { *m = ChatUserInfo{} }
func (m *ChatUserInfo) String() string            { return proto.CompactTextString(m) }
func (*ChatUserInfo) ProtoMessage()               {}
func (*ChatUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChatUserInfo) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ChatUserInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *ChatUserInfo) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *ChatUserInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type ChatMsgInfo struct {
	//    int32 msgId = 1; //msg针对该用户的id, 用户来取消息发NewMsgPullReq需要带上的lastmsgId 就是该msgId
	MsgUuid     string             `protobuf:"bytes,1,opt,name=msg_uuid,json=msgUuid" json:"msg_uuid,omitempty"`
	FrmUserInfo *ChatUserInfo      `protobuf:"bytes,2,opt,name=frm_user_info,json=frmUserInfo" json:"frm_user_info,omitempty"`
	MsgInfo     *ChatSendedMsgInfo `protobuf:"bytes,3,opt,name=msg_info,json=msgInfo" json:"msg_info,omitempty"`
}

func (m *ChatMsgInfo) Reset()                    { *m = ChatMsgInfo{} }
func (m *ChatMsgInfo) String() string            { return proto.CompactTextString(m) }
func (*ChatMsgInfo) ProtoMessage()               {}
func (*ChatMsgInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ChatMsgInfo) GetMsgUuid() string {
	if m != nil {
		return m.MsgUuid
	}
	return ""
}

func (m *ChatMsgInfo) GetFrmUserInfo() *ChatUserInfo {
	if m != nil {
		return m.FrmUserInfo
	}
	return nil
}

func (m *ChatMsgInfo) GetMsgInfo() *ChatSendedMsgInfo {
	if m != nil {
		return m.MsgInfo
	}
	return nil
}

type ChatSendedMsgInfo struct {
	TargetUid   string      `protobuf:"bytes,1,opt,name=target_uid,json=targetUid" json:"target_uid,omitempty"`
	MsgType     MsgType     `protobuf:"varint,2,opt,name=msg_type,json=msgType,enum=gate.MsgType" json:"msg_type,omitempty"`
	ContentType ContentType `protobuf:"varint,3,opt,name=content_type,json=contentType,enum=gate.ContentType" json:"content_type,omitempty"`
	Content     string      `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *ChatSendedMsgInfo) Reset()                    { *m = ChatSendedMsgInfo{} }
func (m *ChatSendedMsgInfo) String() string            { return proto.CompactTextString(m) }
func (*ChatSendedMsgInfo) ProtoMessage()               {}
func (*ChatSendedMsgInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChatSendedMsgInfo) GetTargetUid() string {
	if m != nil {
		return m.TargetUid
	}
	return ""
}

func (m *ChatSendedMsgInfo) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_SYSTEM
}

func (m *ChatSendedMsgInfo) GetContentType() ContentType {
	if m != nil {
		return m.ContentType
	}
	return ContentType_TEXT
}

func (m *ChatSendedMsgInfo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// 握手协议: 客户端和Gate建立连接后,客户端发送的第一个协议,用于交换对称密钥
type HandShakeReq struct {
	PubkeyN []byte `protobuf:"bytes,1,opt,name=pubkeyN,proto3" json:"pubkeyN,omitempty"`
	PubkeyE int32  `protobuf:"varint,2,opt,name=pubkeyE" json:"pubkeyE,omitempty"`
}

func (m *HandShakeReq) Reset()                    { *m = HandShakeReq{} }
func (m *HandShakeReq) String() string            { return proto.CompactTextString(m) }
func (*HandShakeReq) ProtoMessage()               {}
func (*HandShakeReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HandShakeReq) GetPubkeyN() []byte {
	if m != nil {
		return m.PubkeyN
	}
	return nil
}

func (m *HandShakeReq) GetPubkeyE() int32 {
	if m != nil {
		return m.PubkeyE
	}
	return 0
}

// 握手返回协议
type HandShakeRes struct {
	Semkey      []byte     `protobuf:"bytes,1,opt,name=semkey,proto3" json:"semkey,omitempty"`
	Sign        []byte     `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Result      ResultType `protobuf:"varint,3,opt,name=result,enum=gate.ResultType" json:"result,omitempty"`
	Description string     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *HandShakeRes) Reset()                    { *m = HandShakeRes{} }
func (m *HandShakeRes) String() string            { return proto.CompactTextString(m) }
func (*HandShakeRes) ProtoMessage()               {}
func (*HandShakeRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HandShakeRes) GetSemkey() []byte {
	if m != nil {
		return m.Semkey
	}
	return nil
}

func (m *HandShakeRes) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *HandShakeRes) GetResult() ResultType {
	if m != nil {
		return m.Result
	}
	return ResultType_FAIL
}

func (m *HandShakeRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type LoginReq struct {
	Uid         string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	UserToken   string `protobuf:"bytes,2,opt,name=user_token,json=userToken" json:"user_token,omitempty"`
	Os          string `protobuf:"bytes,3,opt,name=os" json:"os,omitempty"`
	Appid       string `protobuf:"bytes,4,opt,name=appid" json:"appid,omitempty"`
	SdkVersion  int32  `protobuf:"varint,5,opt,name=sdk_version,json=sdkVersion" json:"sdk_version,omitempty"`
	DeviceToken string `protobuf:"bytes,6,opt,name=device_token,json=deviceToken" json:"device_token,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LoginReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LoginReq) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *LoginReq) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *LoginReq) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *LoginReq) GetSdkVersion() int32 {
	if m != nil {
		return m.SdkVersion
	}
	return 0
}

func (m *LoginReq) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

type LoginRes struct {
	Result      ResultType `protobuf:"varint,1,opt,name=result,enum=gate.ResultType" json:"result,omitempty"`
	Description string     `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *LoginRes) Reset()                    { *m = LoginRes{} }
func (m *LoginRes) String() string            { return proto.CompactTextString(m) }
func (*LoginRes) ProtoMessage()               {}
func (*LoginRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LoginRes) GetResult() ResultType {
	if m != nil {
		return m.Result
	}
	return ResultType_FAIL
}

func (m *LoginRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type LogOutReq struct {
}

func (m *LogOutReq) Reset()                    { *m = LogOutReq{} }
func (m *LogOutReq) String() string            { return proto.CompactTextString(m) }
func (*LogOutReq) ProtoMessage()               {}
func (*LogOutReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type LogOutRes struct {
}

func (m *LogOutRes) Reset()                    { *m = LogOutRes{} }
func (m *LogOutRes) String() string            { return proto.CompactTextString(m) }
func (*LogOutRes) ProtoMessage()               {}
func (*LogOutRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type HeartReq struct {
}

func (m *HeartReq) Reset()                    { *m = HeartReq{} }
func (m *HeartReq) String() string            { return proto.CompactTextString(m) }
func (*HeartReq) ProtoMessage()               {}
func (*HeartReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type HeartRes struct {
}

func (m *HeartRes) Reset()                    { *m = HeartRes{} }
func (m *HeartRes) String() string            { return proto.CompactTextString(m) }
func (*HeartRes) ProtoMessage()               {}
func (*HeartRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type SendPriMsgReq struct {
	ChatMsg *ChatSendedMsgInfo `protobuf:"bytes,1,opt,name=chat_msg,json=chatMsg" json:"chat_msg,omitempty"`
}

func (m *SendPriMsgReq) Reset()                    { *m = SendPriMsgReq{} }
func (m *SendPriMsgReq) String() string            { return proto.CompactTextString(m) }
func (*SendPriMsgReq) ProtoMessage()               {}
func (*SendPriMsgReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SendPriMsgReq) GetChatMsg() *ChatSendedMsgInfo {
	if m != nil {
		return m.ChatMsg
	}
	return nil
}

type SendPriMsgRes struct {
	CreatedAt   int64      `protobuf:"varint,1,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Result      ResultType `protobuf:"varint,2,opt,name=result,enum=gate.ResultType" json:"result,omitempty"`
	Description string     `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *SendPriMsgRes) Reset()                    { *m = SendPriMsgRes{} }
func (m *SendPriMsgRes) String() string            { return proto.CompactTextString(m) }
func (*SendPriMsgRes) ProtoMessage()               {}
func (*SendPriMsgRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SendPriMsgRes) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *SendPriMsgRes) GetResult() ResultType {
	if m != nil {
		return m.Result
	}
	return ResultType_FAIL
}

func (m *SendPriMsgRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Gate 主动发给客户端的 通知有新消息，客户端新连接上来就会直接取消息，连接后靠此消息来拉
type NewMsgNotify struct {
	MsgType           MsgType `protobuf:"varint,1,opt,name=msg_type,json=msgType,enum=gate.MsgType" json:"msg_type,omitempty"`
	MsgId             int64   `protobuf:"varint,2,opt,name=msg_id,json=msgId" json:"msg_id,omitempty"`
	QueryAfterSeconds uint32  `protobuf:"varint,3,opt,name=query_after_seconds,json=queryAfterSeconds" json:"query_after_seconds,omitempty"`
}

func (m *NewMsgNotify) Reset()                    { *m = NewMsgNotify{} }
func (m *NewMsgNotify) String() string            { return proto.CompactTextString(m) }
func (*NewMsgNotify) ProtoMessage()               {}
func (*NewMsgNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *NewMsgNotify) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_SYSTEM
}

func (m *NewMsgNotify) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *NewMsgNotify) GetQueryAfterSeconds() uint32 {
	if m != nil {
		return m.QueryAfterSeconds
	}
	return 0
}

// Gate 主动发给客户端的 通知被另外的设备登录踢出
type KickoutNotify struct {
	Reason KickType `protobuf:"varint,1,opt,name=reason,enum=gate.KickType" json:"reason,omitempty"`
}

func (m *KickoutNotify) Reset()                    { *m = KickoutNotify{} }
func (m *KickoutNotify) String() string            { return proto.CompactTextString(m) }
func (*KickoutNotify) ProtoMessage()               {}
func (*KickoutNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *KickoutNotify) GetReason() KickType {
	if m != nil {
		return m.Reason
	}
	return KickType_OTHERLOGIN
}

// 客户端发起拉消息请求
type NewMsgPullReq struct {
	LastMsgUuid string  `protobuf:"bytes,1,opt,name=last_msg_uuid,json=lastMsgUuid" json:"last_msg_uuid,omitempty"`
	MsgType     MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,enum=gate.MsgType" json:"msg_type,omitempty"`
	Limit       int32   `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *NewMsgPullReq) Reset()                    { *m = NewMsgPullReq{} }
func (m *NewMsgPullReq) String() string            { return proto.CompactTextString(m) }
func (*NewMsgPullReq) ProtoMessage()               {}
func (*NewMsgPullReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *NewMsgPullReq) GetLastMsgUuid() string {
	if m != nil {
		return m.LastMsgUuid
	}
	return ""
}

func (m *NewMsgPullReq) GetMsgType() MsgType {
	if m != nil {
		return m.MsgType
	}
	return MsgType_SYSTEM
}

func (m *NewMsgPullReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type NewMsgPullRes struct {
	Messages    []*ChatMsgInfo `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
	HasMore     bool           `protobuf:"varint,2,opt,name=hasMore" json:"hasMore,omitempty"`
	Result      ResultType     `protobuf:"varint,3,opt,name=result,enum=gate.ResultType" json:"result,omitempty"`
	Description string         `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (m *NewMsgPullRes) Reset()                    { *m = NewMsgPullRes{} }
func (m *NewMsgPullRes) String() string            { return proto.CompactTextString(m) }
func (*NewMsgPullRes) ProtoMessage()               {}
func (*NewMsgPullRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *NewMsgPullRes) GetMessages() []*ChatMsgInfo {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *NewMsgPullRes) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

func (m *NewMsgPullRes) GetResult() ResultType {
	if m != nil {
		return m.Result
	}
	return ResultType_FAIL
}

func (m *NewMsgPullRes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*ChatUserInfo)(nil), "gate.ChatUserInfo")
	proto.RegisterType((*ChatMsgInfo)(nil), "gate.ChatMsgInfo")
	proto.RegisterType((*ChatSendedMsgInfo)(nil), "gate.ChatSendedMsgInfo")
	proto.RegisterType((*HandShakeReq)(nil), "gate.HandShakeReq")
	proto.RegisterType((*HandShakeRes)(nil), "gate.HandShakeRes")
	proto.RegisterType((*LoginReq)(nil), "gate.LoginReq")
	proto.RegisterType((*LoginRes)(nil), "gate.LoginRes")
	proto.RegisterType((*LogOutReq)(nil), "gate.LogOutReq")
	proto.RegisterType((*LogOutRes)(nil), "gate.LogOutRes")
	proto.RegisterType((*HeartReq)(nil), "gate.HeartReq")
	proto.RegisterType((*HeartRes)(nil), "gate.HeartRes")
	proto.RegisterType((*SendPriMsgReq)(nil), "gate.SendPriMsgReq")
	proto.RegisterType((*SendPriMsgRes)(nil), "gate.SendPriMsgRes")
	proto.RegisterType((*NewMsgNotify)(nil), "gate.NewMsgNotify")
	proto.RegisterType((*KickoutNotify)(nil), "gate.KickoutNotify")
	proto.RegisterType((*NewMsgPullReq)(nil), "gate.NewMsgPullReq")
	proto.RegisterType((*NewMsgPullRes)(nil), "gate.NewMsgPullRes")
	proto.RegisterEnum("gate.ProtoType", ProtoType_name, ProtoType_value)
	proto.RegisterEnum("gate.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("gate.ContentType", ContentType_name, ContentType_value)
	proto.RegisterEnum("gate.ResultType", ResultType_name, ResultType_value)
	proto.RegisterEnum("gate.KickType", KickType_name, KickType_value)
}

func init() { proto.RegisterFile("gate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1066 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4f, 0x6f, 0xe2, 0x56,
	0x10, 0x8f, 0x6d, 0x20, 0x30, 0x86, 0xd4, 0x79, 0x9b, 0xec, 0xb2, 0x95, 0xb6, 0x9b, 0xfa, 0x50,
	0xa5, 0x91, 0x9a, 0x43, 0x5a, 0xb5, 0x87, 0x9e, 0xbc, 0xc1, 0x49, 0xac, 0x06, 0xdb, 0x7a, 0x36,
	0xa8, 0x3d, 0x21, 0x2f, 0x7e, 0x38, 0x16, 0x60, 0x13, 0x3f, 0x93, 0x15, 0xbd, 0xf4, 0xd6, 0x4f,
	0xd0, 0x8f, 0xd0, 0xde, 0xfa, 0xf1, 0xfa, 0x01, 0xaa, 0xf7, 0x07, 0x30, 0x41, 0x5a, 0x75, 0xa5,
	0xde, 0xde, 0xfc, 0x66, 0xde, 0xfb, 0xcd, 0x6f, 0x3c, 0x33, 0x00, 0x90, 0x44, 0x25, 0xb9, 0x5c,
	0x14, 0x79, 0x99, 0xa3, 0x1a, 0x3b, 0x9b, 0x33, 0x68, 0x5f, 0x3f, 0x44, 0xe5, 0x80, 0x92, 0xc2,
	0xc9, 0x26, 0x39, 0x32, 0x40, 0x5b, 0xa6, 0x71, 0x57, 0x39, 0x53, 0xce, 0x5b, 0x98, 0x1d, 0xd1,
	0xe7, 0xd0, 0xcc, 0xd2, 0xf1, 0x34, 0x8b, 0xe6, 0xa4, 0xab, 0x72, 0x78, 0x63, 0xa3, 0x97, 0xd0,
	0x48, 0x48, 0x16, 0x93, 0xa2, 0xab, 0x9d, 0x29, 0xe7, 0x75, 0x2c, 0x2d, 0x86, 0x47, 0x4f, 0x51,
	0x19, 0x15, 0xdd, 0x1a, 0xbf, 0x21, 0x2d, 0xf3, 0x0f, 0x05, 0x74, 0x46, 0xd7, 0xa7, 0x09, 0x67,
	0x7b, 0x0d, 0xcd, 0x39, 0x4d, 0x46, 0xcb, 0x2d, 0xe5, 0xe1, 0x9c, 0x26, 0x03, 0x46, 0xfb, 0x3d,
	0x74, 0x26, 0xc5, 0x7c, 0xb4, 0xa4, 0xa4, 0x18, 0xa5, 0xd9, 0x24, 0xe7, 0xdc, 0xfa, 0x15, 0xba,
	0xe4, 0x12, 0xaa, 0x39, 0x63, 0x7d, 0x52, 0xcc, 0x37, 0x02, 0xae, 0xc4, 0x93, 0xfc, 0x8a, 0xc6,
	0xaf, 0xbc, 0xda, 0x5e, 0x09, 0x58, 0x7a, 0xb1, 0x64, 0xe7, 0x5c, 0xec, 0x60, 0xfe, 0xad, 0xc0,
	0xf1, 0x9e, 0x1b, 0xbd, 0x01, 0x28, 0xa3, 0x22, 0x21, 0xe5, 0x68, 0x9b, 0x5e, 0x4b, 0x20, 0x83,
	0x34, 0x46, 0xe7, 0x82, 0xa8, 0x5c, 0x2d, 0x44, 0x5d, 0x8e, 0xae, 0x3a, 0x82, 0xa8, 0x4f, 0x93,
	0x70, 0xb5, 0x20, 0xfc, 0x79, 0x76, 0x40, 0xdf, 0x41, 0x7b, 0x9c, 0x67, 0x25, 0xc9, 0x4a, 0x11,
	0xad, 0xf1, 0xe8, 0x63, 0x99, 0x96, 0xf0, 0xf0, 0x1b, 0xfa, 0x78, 0x6b, 0xa0, 0x2e, 0x1c, 0x4a,
	0x53, 0x16, 0x71, 0x6d, 0x9a, 0xef, 0xa0, 0x7d, 0x17, 0x65, 0x71, 0xf0, 0x10, 0x4d, 0x09, 0x26,
	0x8f, 0x2c, 0x72, 0xb1, 0x7c, 0x3f, 0x25, 0x2b, 0x97, 0x67, 0xd9, 0xc6, 0x6b, 0x73, 0xeb, 0xb1,
	0x79, 0x8a, 0xf5, 0xb5, 0xc7, 0x36, 0x7f, 0x57, 0x76, 0x1e, 0xa1, 0xec, 0x93, 0x51, 0x32, 0x9f,
	0x92, 0x95, 0x7c, 0x43, 0x5a, 0x08, 0x41, 0x8d, 0xa6, 0x49, 0xc6, 0xef, 0xb7, 0x31, 0x3f, 0xa3,
	0x73, 0x68, 0x14, 0x84, 0x2e, 0x67, 0xa5, 0x94, 0x62, 0x08, 0x29, 0x98, 0x63, 0x5c, 0x89, 0xf4,
	0xa3, 0x33, 0xd0, 0x63, 0x42, 0xc7, 0x45, 0xba, 0x28, 0xd3, 0x3c, 0x93, 0x42, 0xaa, 0x90, 0xf9,
	0x97, 0x02, 0xcd, 0xfb, 0x3c, 0x49, 0x33, 0xa6, 0x64, 0xbf, 0xfb, 0xde, 0x00, 0xf0, 0x16, 0x28,
	0xf3, 0x29, 0xc9, 0x64, 0xff, 0xb5, 0x18, 0x12, 0x32, 0x00, 0x1d, 0x81, 0x9a, 0x53, 0x9e, 0x45,
	0x0b, 0xab, 0x39, 0x45, 0x27, 0x50, 0x8f, 0x16, 0x8b, 0x34, 0x96, 0x4c, 0xc2, 0x40, 0x6f, 0x41,
	0xa7, 0xf1, 0x74, 0xf4, 0x44, 0x0a, 0xca, 0xb2, 0xa8, 0xf3, 0x52, 0x00, 0x8d, 0xa7, 0x43, 0x81,
	0xa0, 0x2f, 0xa1, 0x1d, 0x93, 0xa7, 0x74, 0x4c, 0x24, 0x4f, 0x63, 0x9d, 0x27, 0xc3, 0x38, 0x93,
	0x39, 0xdc, 0xa4, 0x49, 0x2b, 0xfa, 0x95, 0x4f, 0xd3, 0xaf, 0xee, 0xeb, 0xd7, 0xa1, 0x75, 0x9f,
	0x27, 0xde, 0xb2, 0xc4, 0xe4, 0xb1, 0x6a, 0x50, 0x13, 0xa0, 0x79, 0x47, 0xa2, 0x82, 0x3b, 0xb6,
	0x67, 0x6a, 0x5e, 0x43, 0x87, 0x35, 0xaa, 0x5f, 0xa4, 0x7d, 0x9a, 0xb0, 0xaa, 0x5d, 0x41, 0x73,
	0xfc, 0x10, 0x95, 0xa3, 0x39, 0x4d, 0x78, 0x42, 0x1f, 0x6b, 0xf9, 0xb1, 0x98, 0x3e, 0xf3, 0xd7,
	0xdd, 0x47, 0x28, 0x2b, 0xf4, 0xb8, 0x20, 0x51, 0x49, 0xe2, 0x51, 0x24, 0x74, 0x69, 0xb8, 0x25,
	0x11, 0xab, 0xac, 0x48, 0x56, 0x3f, 0x4d, 0xb2, 0xb6, 0x2f, 0xf9, 0x37, 0x68, 0xbb, 0xe4, 0x43,
	0x9f, 0x26, 0x6e, 0x5e, 0xa6, 0x93, 0xd5, 0xce, 0x24, 0x29, 0x1f, 0x9d, 0xa4, 0x53, 0x68, 0xf0,
	0xe1, 0x8e, 0x79, 0x16, 0x1a, 0xae, 0xb3, 0x09, 0x8e, 0xd1, 0x25, 0xbc, 0x78, 0x5c, 0x92, 0x62,
	0x35, 0x8a, 0x26, 0x25, 0x29, 0x46, 0x94, 0x8c, 0xf3, 0x2c, 0x16, 0x6d, 0xd1, 0xc1, 0xc7, 0xdc,
	0x65, 0x31, 0x4f, 0x20, 0x1c, 0xe6, 0x0f, 0xd0, 0xf9, 0x29, 0x1d, 0x4f, 0xf3, 0x65, 0x29, 0x33,
	0xf8, 0x8a, 0xa9, 0x8b, 0x68, 0x9e, 0x49, 0xfe, 0x23, 0xc1, 0xcf, 0x82, 0xd6, 0xda, 0x98, 0xd7,
	0xa4, 0xd0, 0x11, 0x99, 0xfb, 0xcb, 0xd9, 0x8c, 0x95, 0xde, 0x84, 0xce, 0x2c, 0xa2, 0xbc, 0xf4,
	0xd5, 0x2d, 0xa6, 0x33, 0xb0, 0x2f, 0x37, 0xd9, 0x7f, 0x5f, 0x14, 0x27, 0x50, 0x9f, 0xa5, 0xf3,
	0xb4, 0x94, 0xdb, 0x54, 0x18, 0xe6, 0x9f, 0xca, 0x2e, 0x2b, 0x45, 0xdf, 0x40, 0x73, 0x4e, 0x28,
	0x8d, 0x12, 0x42, 0xbb, 0xca, 0x99, 0x76, 0xae, 0x6f, 0x96, 0xc9, 0x76, 0xb7, 0xe2, 0x4d, 0x08,
	0xdb, 0x02, 0x0f, 0x11, 0xed, 0xe7, 0x85, 0xe0, 0x6f, 0xe2, 0xb5, 0xf9, 0x7f, 0x0e, 0xf2, 0xc5,
	0x3f, 0x2a, 0xb4, 0x7c, 0xf6, 0xcb, 0x22, 0xa5, 0x18, 0xd5, 0x1d, 0xc5, 0x30, 0xe3, 0xe0, 0x19,
	0x4a, 0x39, 0xaa, 0x20, 0x03, 0xda, 0xeb, 0x46, 0xe7, 0x88, 0x5a, 0x41, 0x44, 0x8c, 0xc6, 0x90,
	0xf5, 0x96, 0xe0, 0x08, 0x54, 0x10, 0x11, 0xa3, 0xa3, 0x63, 0xe8, 0x6c, 0x46, 0x89, 0x43, 0xed,
	0x2a, 0x24, 0xa2, 0x8e, 0xd0, 0x29, 0x1c, 0xef, 0x8c, 0x0f, 0x87, 0x4f, 0x9e, 0xc3, 0x22, 0xfa,
	0x94, 0xc1, 0x3b, 0x5f, 0x9c, 0xc3, 0x2f, 0x9f, 0xc3, 0x22, 0xfa, 0x15, 0xd3, 0x57, 0xed, 0x6c,
	0x8e, 0x7e, 0xc1, 0x82, 0x77, 0xda, 0x8d, 0xc3, 0x6f, 0x59, 0x70, 0xf5, 0x67, 0x8c, 0xa3, 0x31,
	0x7a, 0x01, 0x9f, 0x55, 0xbe, 0x22, 0x07, 0x09, 0x7a, 0x0d, 0xa7, 0x7b, 0xb3, 0xcc, 0x5d, 0x93,
	0x8b, 0x1f, 0xe1, 0x50, 0xf6, 0x11, 0x02, 0x68, 0x04, 0xbf, 0x04, 0xa1, 0xdd, 0x37, 0x0e, 0x90,
	0x0e, 0x87, 0x3e, 0x76, 0x86, 0x56, 0x68, 0x1b, 0x0a, 0x6a, 0x41, 0xfd, 0x16, 0x7b, 0x03, 0xdf,
	0x50, 0x51, 0x1b, 0x9a, 0xd7, 0x77, 0x56, 0x88, 0x3d, 0xaf, 0x6f, 0x68, 0x17, 0x37, 0xa0, 0x57,
	0x7e, 0x7f, 0x50, 0x13, 0x6a, 0xa1, 0xfd, 0x73, 0x68, 0x1c, 0xb0, 0x1b, 0x4e, 0xdf, 0xba, 0x95,
	0x97, 0xad, 0x41, 0xcf, 0xf1, 0x0c, 0x95, 0x1d, 0x87, 0x4e, 0xcf, 0xf6, 0x0c, 0x8d, 0xbd, 0xe3,
	0x7b, 0x81, 0x13, 0x3a, 0x9e, 0x6b, 0xd4, 0x2e, 0x3e, 0x00, 0x6c, 0x7b, 0x86, 0x3d, 0x73, 0x63,
	0x39, 0xf7, 0x22, 0x8b, 0x60, 0x70, 0x7d, 0x6d, 0x07, 0x81, 0xa1, 0xb0, 0x6f, 0xe1, 0x5b, 0xd8,
	0xea, 0x07, 0x8e, 0x3b, 0xb4, 0xee, 0x9d, 0x9e, 0xa1, 0xb2, 0x12, 0x04, 0x36, 0x1e, 0xda, 0xd8,
	0xf5, 0x42, 0x3c, 0x70, 0x5d, 0xc7, 0xbd, 0x35, 0x34, 0x5e, 0x45, 0x2f, 0x74, 0x5c, 0xec, 0xdc,
	0xde, 0x85, 0x41, 0x68, 0x85, 0x83, 0xc0, 0xa8, 0xb1, 0xc2, 0xb8, 0x5e, 0x18, 0x0c, 0x7c, 0xdf,
	0xc3, 0xa1, 0xe5, 0xfb, 0x4e, 0xcf, 0xa8, 0x5f, 0x7c, 0x0d, 0xcd, 0xf5, 0x90, 0xa2, 0x23, 0x00,
	0x2f, 0xbc, 0xb3, 0xf1, 0xbd, 0x77, 0xeb, 0xb8, 0xc6, 0x01, 0xea, 0x40, 0xeb, 0xc6, 0xc3, 0xef,
	0x9c, 0x5e, 0xcf, 0x76, 0x0d, 0xf5, 0x7d, 0x83, 0xff, 0xed, 0xf9, 0xf6, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc3, 0xb4, 0x43, 0x35, 0x04, 0x09, 0x00, 0x00,
}
